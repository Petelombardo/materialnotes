version: '3.8'

services:
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --save 20 1 --loglevel warning
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build: ./backend
    environment:
      - NODE_ENV=production
      - PORT=3001
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - WEBSOCKET_ENABLED=true
    env_file:
      - .env
    volumes:
      - ./data:/app/data
    depends_on:
      - redis
    networks:
      - app-network
    restart: unless-stopped
    # Expose port internally for nginx proxy
    expose:
      - "3001"

  frontend:
    build: ./frontend
    depends_on:
      - backend
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL}
    networks:
      - app-network
    restart: unless-stopped
    # Expose port internally for nginx proxy
    expose:
      - "80"

  nginx:
    build: ./nginx
    ports:
      # Single port configuration - all traffic through nginx
      - "${PORT:-3002}:80"
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped
    environment:
      - BACKEND_HOST=backend
      - BACKEND_PORT=3001
      - FRONTEND_HOST=frontend
      - FRONTEND_PORT=80

networks:
  app-network:
    driver: bridge

volumes:
  data:
  redis_data:
